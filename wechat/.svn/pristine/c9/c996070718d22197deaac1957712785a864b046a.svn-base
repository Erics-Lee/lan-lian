package com.unionblue.wechat.service.impl;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.unionblue.wechat.model.AssistInfo;
import com.unionblue.wechat.service.IAssistService;
import com.unionblue.wechat.util.HttpClinetUtil;
import com.unionblue.wechat.util.JsonUtil;
import com.unionblue.wechat.util.ReturnTokenUtil;
import com.unionblue.wechat.util.StringUtil;


@Service
public class AssistServiceImpl implements IAssistService{

	private static final Logger LOG = LoggerFactory.getLogger(AssistServiceImpl.class);
	
	@Value("${api.url}")
    private String url;
	
	@Override
	public String selectOfficialQuestionAndAnswer(String parentAppKey) {
		Map<String, String> map = new HashMap<String, String>();
		map.put("ParentAppKey", parentAppKey);
		String Access_token = HttpClinetUtil.doGet(url+"/OfficialQuestionAndAnswer",map,"");
		return ReturnTokenUtil.getReturnTokenUtilArray(Access_token, AssistInfo.class);
	}
	
	public String selectOfficialAnswer(String parentAppKey,Integer QuestionOrderNumber) {
		Map<String, String> map2 = new HashMap<String, String>();
		map2.put("ParentAppKey", parentAppKey);
		String Access_token = HttpClinetUtil.doGet(url+"/OfficialQuestionAndAnswer",map2,"");
		JSONObject json = JSONObject.parseObject(Access_token);
        String returnCode = (String) json.get("ReturnCode");
        if(!StringUtil.isEmpty(returnCode) && (returnCode.equals("000000") || returnCode.equals("0000"))) {
        	String resultInfo = (String) json.get("ReturnJson");
        	List<AssistInfo> list = JSON.parseArray(resultInfo, AssistInfo.class);
        	AssistInfo info = new AssistInfo();
        	for(int i=0;i<list.size();i++) {
        		if(list.get(i).getQuestionOrderNumber() == QuestionOrderNumber) {
        			info = list.get(i);
        			break;
        		}
        	}
        	String answer = info.getAnswer();
        	answer = answer.replaceAll("\\\\n", "");
        	List<String> list2 = new ArrayList<String>();
        	if(answer.startsWith("一")) {
    			String[] strs = answer.split("； ");
    			for(int i=0;i<strs.length;i++) {
    				list2.add(strs[i]);
    			}
    		}else {
    			list2.add(answer);
    		}
        	Map<String, Object> map = new HashMap<String, Object>();
        	map.put("questionOrderNumber", info.getQuestionOrderNumber());
        	map.put("Question", info.getQuestion());
        	map.put("Answer", list2);
        	return JsonUtil.success(map);
        }else {
        	return JsonUtil.error((String) json.get("ReturnMessage"));
        }
		//return ReturnTokenUtil.getReturnTokenUtilArray(Access_token, AssistInfo.class);
	}

}
