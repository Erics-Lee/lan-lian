package com.unionblue.wechat.controller;


import com.alibaba.fastjson.JSONObject;
import com.unionblue.wechat.service.ITestService;
import com.unionblue.wechat.service.UserService;
import com.unionblue.wechat.service.WechatSservice;
import com.unionblue.wechat.util.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.redis.core.RedisTemplate;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.HashMap;
import java.util.Map;
import java.util.UUID;
import java.util.concurrent.TimeUnit;

@Controller
public class TestController {
    public TestController() {
    }

    @Autowired
    private UserService userService;

    @RequestMapping({"/map2"})
    @ResponseBody
    public String map2(HttpServletRequest request) {
        return InvoiceUploadProgress.map2.toString();
    }

    @PostMapping({"/notify_url"})
    @ResponseBody
    public String notify(HttpServletRequest request, String bill_no, String orderid, String price, String actual_price, String orderuid, String key, String account_name) {
        System.out.println("bill_no:" + bill_no);
        System.out.println("orderid:" + orderid);
        System.out.println("price:" + price);
        System.out.println("actual_price:" + actual_price);
        System.out.println("orderuid:" + orderuid);
        System.out.println("key:" + key);
        System.out.println("account_name:" + account_name);
        String token = "T0TZ0WHZL6X3DAII8Q264OWQ8YH3QI00";
        String md5 = MD5(actual_price + bill_no + orderid + orderuid + price + token);
        return key.equals(md5)?"success":"error";
    }

    public static String MD5(String sourceStr) {
        String result = "";

        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            md.update(sourceStr.getBytes());
            byte[] b = md.digest();
            StringBuffer buf = new StringBuffer("");

            for(int offset = 0; offset < b.length; ++offset) {
                int i = b[offset];
                if(i < 0) {
                    i += 256;
                }

                if(i < 16) {
                    buf.append("0");
                }

                buf.append(Integer.toHexString(i));
            }

            result = buf.toString();
        } catch (NoSuchAlgorithmException var7) {
            System.out.println(var7);
        }

        return result;
    }

    @RequestMapping({"/return_url"})
    public String returnurl(HttpServletRequest request, String orderid) {
        System.out.println("orderid:" + orderid);
        System.out.println("orderid:" + orderid);
        System.out.println("orderid:" + orderid);
        System.out.println("orderid:" + orderid);
        System.out.println("orderid:" + orderid);
        return "ttt";
    }

    @RequestMapping({"/pay"})
    public String pay(HttpServletRequest request) {
        return "pay";
    }

    @RequestMapping({"/testx"})
    public String testx(HttpServletRequest request) {
        return "ttt";
    }

    @RequestMapping({"/openId"})
    public void openId(HttpServletRequest request, HttpServletResponse response, String openId) {
        try {
            System.out.println(request.getSession().getAttribute("openId").toString());
            HttpClinetUtil.clearLoginSessionKey(request);
        } catch (Exception var6) {
            request.getSession().setAttribute("bankInfo", "ALL");
            request.getSession().setAttribute("openId", openId);
        }

        try {
            response.sendRedirect(request.getContextPath() + "/index");
        } catch (IOException var5) {
            var5.printStackTrace();
        }

    }

    @RequestMapping({"/Logout"})
    @ResponseBody
    public String Logout(HttpServletRequest request) {
        try {
            String sessionKey = request.getSession().getAttribute("sessionKey").toString();
            String Access_token = HttpClinetUtil.doGet("https://api.taxchain.one/eTaxAPIs100/Logout", (Map)null, sessionKey);
            request.getSession().removeAttribute("sessionKey");
            return JsonUtil.success(Access_token);
        } catch (Exception var4) {
            return JsonUtil.success();
        }
    }

    @RequestMapping({"/login1"})
    @ResponseBody
    public String login1(HttpServletRequest request, HttpServletResponse response, String name, String passwd, String state) {
        String sessionKey = "";
        try {
            request.getSession().setAttribute("bankInfo", "ALL");
            sessionKey = request.getSession().getAttribute("sessionKey").toString();
            System.out.println("name：" + name);
            System.out.println("passwd：" + passwd);
            String Access_token = HttpClinetUtil.doGet("https://api.taxchain.one/eTaxAPIs100/LoginStatus", (Map)null, sessionKey);
            System.out.println(Access_token);
            JSONObject json = JSONObject.parseObject(Access_token);
            String returnCode = (String)json.get("ReturnCode");
            return StringUtil.isEmpty(returnCode) || !returnCode.equals("000000") && !returnCode.equals("0000")?this.loginInfo(request, sessionKey, name, passwd, state, true):JsonUtil.success(Access_token);
        } catch (Exception var9) {
            sessionKey = UUID.randomUUID().toString();
            return loginInfo(request, sessionKey, name, passwd, state, true);
        }
    }

    private String loginInfo(HttpServletRequest request, String sessionKey, String name, String passwd, String state, boolean flag) {
        Map<String, String> map = new HashMap();
        map.put("Account", name);
        map.put("Password", passwd);
        if(state.equals("CMSB")) {
            map.put("ParentAppKey","cb9c567b3bc07c96772cb3e1b9975a8f");
        } else {
            map.put("ParentAppKey","99fd0016d355e8898aaa99fe92df5e68");
        }
        System.out.println("map:" + map);
        String Access_token = HttpClinetUtil.postMap("https://api.taxchain.one/eTaxAPIs100/FirstLogin", map, sessionKey);
        System.out.println(Access_token);
        JSONObject json = JSONObject.parseObject(Access_token);
        String returnCode = (String)json.get("ReturnCode");
        String ReturnMessage = (String)json.get("ReturnMessage");
        if(StringUtil.isEmpty(returnCode) || !returnCode.equals("000000") && !returnCode.equals("0000")) {
            if(!StringUtil.isEmpty(ReturnMessage) && ReturnMessage.equals("登录账号成功") && flag) {
                this.loginInfo(request, sessionKey, name, passwd, state, false);
            }
        } else {
            request.getSession().setAttribute("bankInfo", "ALL");
            request.getSession().setAttribute("sessionKey", sessionKey);
            if(state.equals("CMSB")) {
                request.getSession().setAttribute("parentAppKey", "cb9c567b3bc07c96772cb3e1b9975a8f");
            } else {
                request.getSession().setAttribute("parentAppKey", "99fd0016d355e8898aaa99fe92df5e68");
            }
        }
        request.getSession().setAttribute("sessionKey", sessionKey);
        return JsonUtil.success(Access_token);
    }


}